;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer "lisp" "~/.emacs.d/lisp/" dired-mode) (def-buffer "turtletaro.org" "/Users/wangqun/.emacs.d/turtletaro.org" org-mode) (def-buffer "init.el<wangqun>" "/Users/wangqun/.emacs.d/init.el" emacs-lisp-mode) (def-buffer "init.el<lisp>" "/Users/wangqun/.emacs.d/lisp/.emacs.d/init.el" emacs-lisp-mode) (def-buffer "init-better-defaults.el" "/Users/wangqun/.emacs.d/lisp/init-better-defaults.el" emacs-lisp-mode) (def-buffer "init-packages.el" "/Users/wangqun/.emacs.d/lisp/init-packages.el" emacs-lisp-mode) (def-buffer "init-keybindings.el" "/Users/wangqun/.emacs.d/lisp/init-keybindings.el" emacs-lisp-mode) (def-buffer "custom.el" "/Users/wangqun/.emacs.d/lisp/custom.el" emacs-lisp-mode) (def-buffer "oracle.sql" "/Users/wangqun/dev/hisql/oracle.sql" sql-mode) (def-buffer "hello.py" "/Users/wangqun/dev/hipython/hello.py" python-mode) (def-buffer "bin" "/usr/bin/" dired-mode) (def-buffer "afconvert" "/usr/bin/afconvert" fundamental-mode) (def-buffer "hiemacs.el" "/Users/wangqun/dev/hiemacs/hiemacs.el" emacs-lisp-mode)) (def-wconf (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 12) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 60) (min-pixel-width . 160) (min-pixel-height-ignore . 45) (min-pixel-width-ignore . 96) (min-pixel-height-safe . 15) (min-pixel-width-safe . 32)) hc (pixel-width . 1432) (pixel-height . 881) (total-width . 179) (total-height . 58) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 712) (pixel-height . 881) (total-width . 89) (total-height . 58) (normal-height . 1.0) (normal-width . 0.5) (buffer "lisp" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 195) (start . 1))) (leaf (last . t) (pixel-width . 720) (pixel-height . 881) (total-width . 90) (total-height . 58) (normal-height . 1.0) (normal-width . 0.5) (buffer "*eshell*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1303) (start . 1))))) (def-params ((gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 12) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 60) (min-pixel-width . 160) (min-pixel-height-ignore . 45) (min-pixel-width-ignore . 96) (min-pixel-height-safe . 15) (min-pixel-width-safe . 32)) hc (pixel-width . 1432) (pixel-height . 881) (total-width . 179) (total-height . 58) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 712) (pixel-height . 881) (total-width . 89) (total-height . 58) (normal-height . 1.0) (normal-width . 0.5) (buffer "lisp" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins 4) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 195) (start . 1))) (leaf (last . t) (pixel-width . 720) (pixel-height . 881) (total-width . 90) (total-height . 58) (normal-height . 1.0) (normal-width . 0.5) (buffer "*eshell*" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1303) (start . 1)))) "")))) t nil nil))